"""Profile handlers"""
from aiogram import Router, types
from aiogram import F
from aiogram import html
from sqlalchemy.ext.asyncio import AsyncSession

from bot.keyboards.inline import profile_keyboard, back_to_profile_keyboard
from bot.services.transfers import get_transfer_history
from bot.services.users import get_user_balances
from bot.services.withdraws import get_withdraw_history

router = Router(name="profile")


@router.callback_query(F.data == "profile")
async def profile_handler(callback: types.CallbackQuery, session: AsyncSession) -> None:
    """Profile info"""
    # TODO: Get correct balance (Sum of all wallets)
    balances = await get_user_balances(session, callback.from_user.id)

    text = f"üë§<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ</b>\n\n<b>ID:</b> {callback.from_user.id}\n<b>–û–±—â–∏–π –±–∞–ª–∞–Ω—Å:</b> {balances['summary_balance']} USDT\n\n<b>–ë–∞–ª–∞–Ω—Å —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Å—á–µ—Ç–∞</b>: {balances['trading_balance']} USDT\n<b>–ë–∞–ª–∞–Ω—Å –¥–µ–ø–æ–∑–∏—Ç–Ω—ã—Ö —Å—á–µ—Ç–æ–≤</b>: {balances['deposit_balance']} USDT\n<b>–ë–∞–ª–∞–Ω—Å —Å—á–µ—Ç–æ–≤ –¥–ª—è –≤—ã–≤–æ–¥–∞</b>: {balances['withdraw_balance']} USDT"

    await callback.message.edit_text(text, reply_markup=profile_keyboard())
    await callback.answer()


@router.callback_query(F.data == "history_withdraw")
async def history_withdraw_handler(callback: types.CallbackQuery, session: AsyncSession) -> None:
    """Withdraw history info"""
    history = await get_withdraw_history(session, callback.from_user.id)

    history_text = "–ü–æ–∫–∞ –Ω–µ —Å–æ–≤–µ—Ä—à–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π —Å–¥–µ–ª–∫–∏ –Ω–∞ —Ç–æ—Ä–≥–æ–≤–æ–º —Å—á–µ—Ç–µ"

    if history:
        history_text = "\n\n".join(list(map(lambda item: html.pre(item[0]), history)))

    await callback.message.edit_text(
        text=f"<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–¥–µ–ª–∫–∞—Ö –Ω–∞ —Ç–æ—Ä–≥–æ–≤–æ–º —Å—á–µ—Ç–µ</b> üóÇ\n\n{history_text}",
        reply_markup=back_to_profile_keyboard()
    )
    await callback.answer()


@router.callback_query(F.data == "history_transfer_to_trading_wallet")
async def history_transfer_to_trading_wallet_handler(callback: types.CallbackQuery, session: AsyncSession) -> None:
    """Transfer to trading wallet history"""
    history = await get_transfer_history(session, callback.from_user.id)

    history_text = "–ü–æ–∫–∞ –Ω–µ —Å–æ–≤–µ—Ä—à–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞"

    if history:
        history_text = "\n\n".join(
            list(map(lambda
                         item: f"–ö–æ—à–µ–ª–µ–∫-–∏—Å—Ç–æ—á–Ω–∏–∫: ID-{item[0].from_wallet_id}\n–°—É–º–º–∞: {item[0].amount}\n–î–∞—Ç–∞: {item[0].created_at}",
                     history)))

    await callback.message.edit_text(
        text=f"<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä–µ–≤–æ–¥–∞—Ö –Ω–∞ —Ç–æ—Ä–≥–æ–≤—ã–π —Å—á–µ—Ç</b> üóÇ\n\n{history_text}",
        reply_markup=back_to_profile_keyboard()
    )
    await callback.answer()
